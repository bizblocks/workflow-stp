screenActionTemplateBrowse.caption = Шаблоны экранных действий
screenActionTemplateBrowse.importFailed = Не удалось импортировать
screenActionTemplateBrowse.importedSuccess = Успешно импортировано %d
screenActionTemplateBrowse.fileNotFound = Файл не найден
screenActionTemplateBrowse.importError = Ошибка импорта
screenActionTemplateBrowse.export = Экспорт
screenActionTemplateBrowse.exportFailed = Ошибка экспорта
screenActionTemplateBrowse.zipExport = Экспорт в ZIP
screenActionTemplateBrowse.unknownFileFormat = Неизвестный формат файла
screenActionTemplateBrowse.exportingFileName = шаблоны_экранных_действий
screenActionTemplateEdit.caption = Редактор шаблона экранных действий
screenActionTemplateEdit.generic = Главное
screenActionTemplateEdit.sample = Пример
screenActionTemplateEdit.groovyScript = Groovy скрипт действия
screenActionTemplateEdit.scriptHint = Главный скрипт действия. Здесь необходимо описать логику основного действия в случае выбора пользователя.\
  <br>На вход скрипта подаются следующие переменные (в зависимости от типа открываемого экрана):\
  <ul>\
    <li><code>stage</code> - текущий обрабатываемый этап. (экран списков)</li>\
    <li><code>screen</code> - ссылка на экран. (экран списков или экран редактора)</li>\
    <li><code>viewOnly</code> - экран открыт только на просмотр. (экран списков)</li>\
    <li><code>target</code> - ссылка на компонент отображения. Может быть как таблица так и любой другой компонент. (экран списков или экран редактора)</li>\
    <li><code>entity</code> - редактируемая сущность. (экран редактора)</li> \
    <li><code>context['value']</code> - контекст выполняемого процесса. Альтернативная запись ${value}. (экран редактора)</li>\
    <li><code>workflowInstance</code> - ссылка на текщий экземпляр рабочего процесса. (экран редактора)</li>\
    <li><code>workflowInstanceTask</code> - текущая задача активного экземпляра рабочего процесса. (экран редактора)</li>\
  </ul>
screenActionTemplateEdit.permitScriptHint = Дополнительный скрипт для активации данного действия. \
  <br>На вход скрипта подаются следующие переменные (в зависимости от типа открываемого экрана):\
  <ul>\
    <li><code>stage</code> - текущий обрабатываемый этап. (экран списков)</li>\
    <li><code>screen</code> - ссылка на экран. (экран списков или экран редактора)</li>\
    <li><code>viewOnly</code> - экран открыт только на просмотр. (экран списков)</li>\
    <li><code>target</code> - ссылка на компонент отображения. Может быть как таблица так и любой другой компонент. (экран списков или экран редактора)</li>\
    <li><code>entity</code> - редактируемая сущность. (экран редактора)</li> \
    <li><code>context['value']</code> - контекст выполняемого процесса. Альтернативная запись ${value}. (экран редактора)</li>\
    <li><code>workflowInstance</code> - ссылка на текщий экземпляр рабочего процесса. (экран редактора)</li>\
    <li><code>workflowInstanceTask</code> - текущая задача активного экземпляра рабочего процесса. (экран редактора)</li>\
  </ul>\
  Скрипт должен вернуть булевое значение означающее что доступно ли текущее действие или нет.
