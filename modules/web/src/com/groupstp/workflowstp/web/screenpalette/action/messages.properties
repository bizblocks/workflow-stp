screenActionTemplateBrowse.caption = Screen Action Templates
screenActionTemplateBrowse.importFailed = Import Failed
screenActionTemplateBrowse.importedSuccess = Imported successful %d
screenActionTemplateBrowse.fileNotFound = File not found
screenActionTemplateBrowse.importError = Importing error
screenActionTemplateBrowse.export = Export
screenActionTemplateBrowse.exportFailed = Export error
screenActionTemplateBrowse.zipExport = Export to ZIP
screenActionTemplateBrowse.unknownFileFormat = Unknown file format
screenActionTemplateBrowse.exportingFileName = screen_action_templates
screenActionTemplateEdit.caption = Screen Action Template editor
screenActionTemplateEdit.generic = Generic
screenActionTemplateEdit.sample = Sample
screenActionTemplateEdit.groovyScript = Groovy action script
screenActionTemplateEdit.scriptHint = Main action script. Here you should write a code what need to do when user clicked the action.\
  <br>In input of script you have access to (it is depends on type of opening screen):\
  <ul>\
    <li><code>stage</code> - current browsing stage. (browser)</li>\
    <li><code>screen</code> - link to screen. (browser or editor)</li>\
    <li><code>viewOnly</code> - screen opened to view only. (browser)</li>\
    <li><code>target</code> - link to attaching component. It can be table or other custom component. (browser or editor)</li>\
    <li><code>entity</code> - editing entity. (editor)</li> \
    <li><code>context['value']</code> - execution context. In here you can save and get any variables during workflow execution process. Alternatively can be specified as ${value}. (editor)</li>\
    <li><code>workflowInstance</code> - current workflow instance object. (editor)</li>\
    <li><code>workflowInstanceTask</code> - active workflow task of workflow instance. (editor)</li>\
  </ul>
screenActionTemplateEdit.permitScriptHint = Additional script to check action permission. \
  <br>In input of script you have access to (it is depends on type of opening screen):\
  <ul>\
    <li><code>stage</code> - current browsing stage. (browser)</li>\
    <li><code>screen</code> - link to screen. (browser or editor)</li>\
    <li><code>viewOnly</code> - screen opened to view only. (browser)</li>\
    <li><code>target</code> - link to attaching component. It can be table or other custom component. (browser or editor)</li>\
    <li><code>entity</code> - editing entity. (editor)</li> \
    <li><code>context['value']</code> - execution context. In here you can save and get any variables during workflow execution process. Alternatively can be specified as ${value}.(editor)</li>\
    <li><code>workflowInstance</code> - current workflow instance object. (editor)</li>\
    <li><code>workflowInstanceTask</code> - active workflow task of workflow instance. (editor)</li>\
  </ul>\
  Script should return a boolean value which determinate what this action can be permitted for now or not.